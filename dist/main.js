/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/dictionary.js":
/*!***************************!*\
  !*** ./src/dictionary.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\nclass Dictionary {\n\n  constructor() {\n    this.words = [\"ability\", \"able\", \"about\", \"above\", \"accept\", \"according\", \"account\", \"across\",\n    \"act\", \"action\", \"activity\", \"actually\", \"add\", \"address\",\n    \"admit\", \"adult\", \"affect\", \"after\", \"again\", \"against\", \"age\", \"agency\",\n    \"agent\", \"ago\", \"agree\", \"agreement\", \"ahead\", \"air\", \"all\", \"allow\", \"almost\",\n    \"alone\", \"along\", \"already\", \"also\", \"although\", \"always\", \"American\", \"among\",\n    \"amount\", \"analysis\", \"and\", \"animal\", \"another\", \"answer\", \"any\", \"anyone\",\n    \"anything\", \"appear\", \"apply\", \"approach\", \"area\", \"argue\", \"arm\", \"around\",\n    \"arrive\", \"art\", \"article\", \"artist\", \"ask\", \"assume\", \"attack\",\n    \"attention\", \"attorney\", \"audience\", \"author\", \"authority\", \"available\",\n    \"avoid\", \"away\", \"baby\", \"back\", \"bad\", \"bag\", \"ball\", \"bank\", \"bar\", \"base\",\n    \"be\", \"beat\", \"beautiful\", \"because\", \"become\", \"bed\", \"before\", \"begin\",\n    \"behavior\", \"behind\", \"believe\", \"benefit\", \"best\", \"better\", \"between\",\n    \"beyond\", \"big\", \"bill\", \"billion\", \"bit\", \"black\", \"blood\", \"blue\", \"board\",\n    \"body\", \"book\", \"born\", \"both\", \"box\", \"boy\", \"break\", \"bring\", \"brother\",\n    \"budget\", \"build\", \"building\", \"business\", \"but\", \"buy\", \"call\",\n    \"camera\", \"campaign\", \"can\", \"cancer\", \"candidate\", \"capital\", \"car\",\n    \"card\", \"care\", \"career\", \"carry\", \"case\", \"catch\", \"cause\", \"cell\", \"center\",\n    \"central\", \"century\", \"certain\", \"certainly\", \"chair\", \"challenge\", \"chance\",\n    \"change\", \"character\", \"charge\", \"check\", \"child\", \"choice\", \"choose\", \"church\",\n    \"citizen\", \"city\", \"civil\", \"claim\", \"class\", \"clear\", \"clearly\", \"close\",\n    \"coach\", \"cold\", \"collection\", \"college\", \"color\", \"come\", \"commercial\",\n    \"common\", \"community\", \"company\", \"compare\", \"computer\", \"concern\",\n    \"condition\", \"conference\", \"Congress\", \"consider\", \"consumer\", \"contain\",\n    \"continue\", \"control\", \"cost\", \"could\", \"country\", \"couple\", \"course\",\n    \"court\", \"cover\", \"create\", \"crime\", \"cultural\", \"culture\", \"cup\", \"current\",\n    \"customer\", \"cut\", \"dark\", \"data\", \"daughter\", \"day\", \"dead\", \"deal\", \"death\",\n    \"debate\", \"decade\", \"decide\", \"decision\", \"deep\", \"defense\", \"degree\",\n    \"democratic\", \"describe\", \"design\", \"despite\", \"detail\",\n    \"determine\", \"develop\", \"development\", \"die\", \"difference\", \"different\",\n    \"difficult\", \"dinner\", \"direction\", \"director\", \"discover\", \"discuss\",\n    \"discussion\", \"disease\", \"do\", \"doctor\", \"dog\", \"door\", \"down\", \"draw\",\n    \"dream\", \"drive\", \"drop\", \"drug\", \"during\", \"each\", \"early\", \"east\", \"easy\",\n    \"eat\", \"economic\", \"economy\", \"edge\", \"education\", \"effect\", \"effort\", \"eight\",\n    \"either\", \"election\", \"else\", \"employee\", \"end\", \"energy\", \"enjoy\", \"enough\",\n    \"enter\", \"entire\", \"environment\", \"environmental\", \"especially\", \"establish\",\n    \"even\", \"evening\", \"event\", \"ever\", \"every\", \"everybody\", \"everyone\",\n    \"everything\", \"evidence\", \"exactly\", \"example\", \"executive\", \"exist\",\n    \"expect\", \"experience\", \"expert\", \"explain\", \"eye\", \"face\", \"fact\", \"factor\",\n    \"fail\", \"fall\", \"family\", \"far\", \"fast\", \"father\", \"fear\", \"federal\", \"feel\",\n    \"feeling\", \"few\", \"field\", \"fight\", \"figure\", \"fill\", \"film\", \"final\",\n    \"finally\", \"financial\", \"find\", \"fine\", \"finger\", \"finish\", \"fire\", \"firm\",\n    \"first\", \"fish\", \"five\", \"floor\", \"fly\", \"focus\", \"follow\", \"food\", \"foot\",\n    \"for\", \"force\", \"foreign\", \"forget\", \"form\", \"former\", \"forward\", \"four\",\n    \"free\", \"friend\", \"from\", \"front\", \"full\", \"fund\", \"future\", \"game\", \"garden\",\n    \"gas\", \"general\", \"generation\", \"get\", \"girl\", \"give\", \"glass\", \"go\", \"goal\",\n    \"good\", \"government\", \"great\", \"green\", \"ground\", \"group\", \"grow\", \"growth\",\n    \"guess\", \"gun\", \"guy\", \"hair\", \"half\", \"hand\", \"hang\", \"happen\", \"happy\", \"hard\",\n    \"have\", \"he\", \"head\", \"health\", \"hear\", \"heart\", \"heat\", \"heavy\", \"help\", \"her\",\n    \"here\", \"herself\", \"high\", \"him\", \"himself\", \"his\", \"history\", \"hit\", \"hold\",\n    \"home\", \"hope\", \"hospital\", \"hot\", \"hotel\", \"hour\", \"house\", \"how\", \"however\",\n    \"huge\", \"human\", \"hundred\", \"husband\", \"idea\", \"identify\", \"image\",\n    \"imagine\", \"impact\", \"important\", \"improve\", \"include\", \"including\",\n    \"increase\", \"indeed\", \"indicate\", \"individual\", \"industry\", \"information\",\n    \"inside\", \"instead\", \"institution\", \"interest\", \"interesting\", \"international\",\n    \"interview\", \"into\", \"investment\", \"involve\", \"issue\", \"it\", \"item\", \"its\",\n    \"itself\", \"job\", \"join\", \"just\", \"keep\", \"key\", \"kid\", \"kill\", \"kind\", \"kitchen\",\n    \"know\", \"knowledge\", \"land\", \"language\", \"large\", \"last\", \"late\", \"later\",\n    \"laugh\", \"law\", \"lawyer\", \"lay\", \"lead\", \"leader\", \"learn\", \"least\", \"leave\",\n    \"left\", \"leg\", \"legal\", \"less\", \"let\", \"letter\", \"level\", \"lie\", \"life\", \"light\",\n    \"like\", \"likely\", \"line\", \"list\", \"listen\", \"little\", \"live\", \"local\", \"long\",\n    \"look\", \"lose\", \"loss\", \"lot\", \"love\", \"low\", \"machine\", \"magazine\", \"main\",\n    \"maintain\", \"major\", \"majority\", \"make\", \"man\", \"manage\", \"management\",\n    \"manager\", \"many\", \"market\", \"marriage\", \"material\", \"matter\", \"may\", \"maybe\",\n    \"mean\", \"measure\", \"media\", \"medical\", \"meet\", \"meeting\", \"member\",\n    \"memory\", \"mention\", \"message\", \"method\", \"middle\", \"might\", \"military\",\n    \"million\", \"mind\", \"minute\", \"miss\", \"mission\", \"model\", \"modern\", \"moment\",\n    \"money\", \"month\", \"more\", \"morning\", \"most\", \"mother\", \"mouth\", \"move\",\n    \"movement\", \"movie\", \"much\", \"music\", \"must\", \"myself\",\n    \"name\", \"nation\", \"national\", \"natural\", \"nature\", \"near\", \"nearly\",\n    \"necessary\", \"need\", \"network\", \"never\", \"new\", \"news\", \"newspaper\", \"next\",\n    \"nice\", \"night\", \"none\", \"nor\", \"north\", \"not\", \"note\", \"nothing\",\n    \"notice\", \"now\", \"number\", \"occur\", \"off\", \"offer\", \"office\",\n    \"officer\", \"official\", \"often\", \"oil\", \"old\", \"once\", \"one\",\n    \"only\", \"onto\", \"open\", \"operation\", \"opportunity\", \"option\", \"order\",\n    \"organization\", \"other\", \"others\", \"our\", \"out\", \"outside\", \"over\", \"own\",\n    \"owner\", \"page\", \"pain\", \"painting\", \"paper\", \"parent\", \"part\", \"participant\",\n    \"particular\", \"particularly\", \"partner\", \"party\", \"pass\", \"past\", \"patient\",\n    \"pattern\", \"pay\", \"peace\", \"people\", \"per\", \"perform\", \"performance\",\n    \"perhaps\", \"period\", \"person\", \"personal\", \"phone\", \"physical\", \"pick\",\n    \"picture\", \"piece\", \"place\", \"plan\", \"plant\", \"play\", \"player\", \"point\",\n    \"police\", \"policy\", \"political\", \"politics\", \"poor\", \"popular\", \"population\",\n    \"position\", \"positive\", \"possible\", \"power\", \"practice\", \"prepare\", \"present\",\n    \"president\", \"pressure\", \"pretty\", \"prevent\", \"price\", \"private\", \"probably\",\n    \"problem\", \"process\", \"produce\", \"product\", \"production\", \"professional\",\n    \"professor\", \"program\", \"project\", \"property\", \"protect\", \"prove\", \"provide\",\n    \"public\", \"pull\", \"purpose\", \"push\", \"put\", \"quality\", \"question\", \"quickly\",\n    \"quite\", \"race\", \"radio\", \"raise\", \"range\", \"rate\", \"rather\", \"reach\", \"read\",\n    \"ready\", \"real\", \"reality\", \"realize\", \"really\", \"reason\", \"receive\", \"recent\",\n    \"recently\", \"recognize\", \"record\", \"red\", \"reduce\", \"reflect\", \"region\",\n    \"relate\", \"relationship\", \"religious\", \"remain\", \"remember\", \"remove\",\n    \"report\", \"represent\", \"require\", \"research\", \"resource\",\n    \"respond\", \"response\", \"rest\", \"result\", \"return\", \"reveal\",\n    \"rich\", \"right\", \"rise\", \"risk\", \"road\", \"rock\", \"role\", \"room\", \"rule\",\n    \"run\", \"safe\", \"same\", \"save\", \"say\", \"scene\", \"school\", \"science\",\n    \"scientist\", \"score\", \"sea\", \"season\", \"seat\", \"second\", \"section\",\n    \"security\", \"see\", \"seek\", \"seem\", \"sell\", \"send\", \"senior\", \"sense\",\n    \"series\", \"serious\", \"serve\", \"service\", \"set\", \"seven\", \"several\",\n    \"shake\", \"share\", \"she\", \"shoot\", \"short\", \"shot\", \"should\", \"shoulder\",\n    \"show\", \"side\", \"sign\", \"significant\", \"similar\", \"simple\", \"simply\",\n    \"since\", \"sing\", \"single\", \"sister\", \"sit\", \"site\", \"situation\", \"six\",\n    \"size\", \"skill\", \"skin\", \"small\", \"smile\", \"so\", \"social\", \"society\",\n    \"soldier\", \"some\", \"somebody\", \"someone\", \"something\", \"sometimes\",\n    \"son\", \"song\", \"soon\", \"sort\", \"sound\", \"source\", \"south\", \"southern\",\n    \"space\", \"speak\", \"special\", \"specific\", \"speech\", \"spend\", \"sport\",\n    \"spring\", \"staff\", \"stage\", \"stand\", \"standard\", \"star\", \"start\",\n    \"state\", \"statement\", \"station\", \"stay\", \"step\", \"still\", \"stock\",\n    \"stop\", \"store\", \"story\", \"strategy\", \"street\", \"strong\", \"structure\",\n    \"student\", \"study\", \"stuff\", \"style\", \"subject\", \"success\",\n    \"successful\", \"such\", \"suddenly\", \"suffer\", \"suggest\", \"summer\",\n    \"support\", \"sure\", \"surface\", \"system\", \"table\", \"take\", \"talk\",\n    \"task\", \"tax\", \"teach\", \"teacher\", \"team\", \"technology\", \"television\",\n    \"tell\", \"ten\", \"tend\", \"term\", \"test\", \"than\", \"thank\", \"that\", \"the\",\n    \"their\", \"them\", \"themselves\", \"then\", \"theory\", \"there\", \"these\", \"they\",\n    \"thing\", \"think\", \"third\", \"this\", \"those\", \"though\", \"thought\",\n    \"thousand\", \"threat\", \"three\", \"through\", \"throughout\", \"throw\",\n    \"thus\", \"time\", \"today\", \"together\", \"tonight\", \"too\", \"top\",\n    \"total\", \"tough\", \"toward\", \"town\", \"trade\", \"traditional\", \"training\",\n    \"travel\", \"treat\", \"treatment\", \"tree\", \"trial\", \"trip\", \"trouble\",\n    \"true\", \"truth\", \"try\", \"turn\", \"two\", \"type\", \"under\",\n    \"understand\", \"unit\", \"until\", \"upon\", \"use\", \"usually\",\n    \"value\", \"various\", \"very\", \"victim\", \"view\", \"violence\", \"visit\",\n    \"voice\", \"vote\", \"wait\", \"walk\", \"wall\", \"want\", \"war\", \"watch\",\n    \"water\", \"way\", \"we\", \"weapon\", \"wear\", \"week\", \"weight\", \"well\",\n    \"west\", \"western\", \"what\", \"whatever\", \"when\", \"where\", \"whether\",\n    \"which\", \"while\", \"white\", \"who\", \"whole\", \"whom\", \"whose\", \"why\",\n    \"wide\", \"wife\", \"will\", \"win\", \"wind\", \"window\", \"wish\", \"with\",\n    \"within\", \"without\", \"woman\", \"wonder\", \"word\", \"work\", \"worker\",\n    \"world\", \"worry\", \"would\", \"write\", \"writer\", \"wrong\", \"yard\", \"yeah\",\n    \"year\", \"yes\", \"yet\", \"you\", \"young\", \"your\", \"yourself\",\n    \"abode\", \"access\"]\n  }\n\n  randomWord() {\n    const randomIdx = Math.floor(Math.random() * this.words.length)\n    return this.words[randomIdx]\n  }\n  \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Dictionary);\n\n//# sourceURL=webpack:///./src/dictionary.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _zombie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zombie */ \"./src/zombie.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dictionary */ \"./src/dictionary.js\");\n/* harmony import */ var _game_over_screen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game_over_screen */ \"./src/game_over_screen.js\");\n\n\n\n\n\nclass Game {\n  constructor(page, ctx, canvas, wordList, input, scoreInput) {\n    this.page = page;\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.wordList = wordList;\n    this.input = input;\n    this.scoreInput = scoreInput;\n\n    this.player = new _player__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx, canvas);\n    this.dictionary = new _dictionary__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.gameOverScreen = new _game_over_screen__WEBPACK_IMPORTED_MODULE_3__[\"default\"](ctx, canvas);\n\n    this.zombies = {};\n    this.zombieCount = 0;\n    this.counter = 0;\n    this.round = 1;\n    this.alive = true;\n    this.inputTimer = 0;\n    this.attackTimer;\n    this.typeStart = 0;\n    this.typeEnd = 0;\n    this.then = Date.now();\n\n\n    this.drawMenuBackground = this.drawMenuBackground.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.spawnZombies = this.spawnZombies.bind(this);\n    this.handleZombie = this.handleZombie.bind(this);\n    this.separateHorde = this.separateHorde.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.render = this.render.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n    this.gameOverAnimate = this.gameOverAnimate.bind(this);\n    this.handleHighScore = this.handleHighScore.bind(this);\n    this.highScoreAnimate = this.highScoreAnimate.bind(this);\n  }\n\n  drawMenuBackground() {\n    this.ctx.beginPath();\n      this.ctx.rect(0, 0, canvas.width, canvas.height);\n      this.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  resetGame() {\n    this.zombies = {};\n    this.player.health = 100;\n    this.zombieCount = 0;\n    this.counter = 0;\n    this.round = 1;\n    this.alive = true;\n    this.player.killCount = 0;\n  }\n  \n  startTimer(e) {\n    if (this.typeStart === 0 && e.target.value != \" \") {\n      this.typeStart = Date.now();\n    }\n  }\n\n  spawnZombies() {\n    let x = -100;\n    let y = Math.floor(Math.random() * (this.canvas.height-150)) + 50;\n    \n    for (let zomb in this.zombies) {\n      if (this.zombies[zomb].x <= 150) {\n        while (y < this.zombies[zomb].y + 100 && y > this.zombies[zomb].y - 100) {\n          y = Math.floor(Math.random() * (this.canvas.height-150)) + 50;\n        }\n      }\n    }\n\n    let randomSpawn = Math.floor(Math.random() * 2.5) + (250 - this.round);\n    if (this.counter % randomSpawn < this.round) {\n      this.zombies[`zombie${this.zombieCount}`] = new _zombie__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, this.canvas, this.dictionary.randomWord(), \n                                                             x, y, this.alive);\n      this.zombieCount += 1;\n    }\n  }\n\n  handleZombie(e) {\n    if (e.keyCode === 32 || e.keyCode === 13) {\n      let value = this.input.value.trim();\n      for (let zomb in this.zombies) {\n        if (value === this.zombies[zomb].word) {\n          this.attackTimer = this.counter;\n          this.player.attack = true;\n          this.player.killCount += 1;\n          this.zombies[zomb].word = null;\n          this.zombies[zomb].alive = false;\n          break;\n        }\n      }\n      this.input.value = \"\";\n      if (this.typeStart > 0) {\n        this.typeEnd = Date.now();\n        this.inputTimer += (this.typeEnd - this.typeStart)/1000;\n      }\n      this.typeStart = 0;\n    } \n  }\n\n  separateHorde(zombieKey, currentZombie) {\n    Object.values(this.zombies).forEach((otherZombie, idx) => {\n      if (idx < parseInt(zombieKey.slice(6))+8 && idx > parseInt(zombieKey.slice(6))) {\n        if (currentZombie.x >= 20 && otherZombie.alive) {\n          if (currentZombie.y < otherZombie.y && currentZombie.y > otherZombie.y - 30) {\n            currentZombie.dy = -1;\n          } else if (currentZombie.y <= otherZombie.y + 30 && currentZombie.y >= otherZombie.y) {\n            currentZombie.dy = 1;\n          } else if (currentZombie.y === otherZombie.y) {\n            currentZombie.dy = 1;\n          } else {\n            currentZombie.dy = 0;\n          }\n        }\n      }\n    })\n  }\n\n  startGame(e) {\n    if (e.keyCode === 13 || e.button === 0) {\n      this.canvas.removeEventListener('click', this.startGame);\n      this.page.removeEventListener('keydown', this.startGame);\n      this.resetGame();\n      clearInterval(window.startInterval);\n      clearInterval(window.overInterval);\n      this.canvas.className = \"game-screen\";\n      requestAnimationFrame(this.render)\n      this.input.disabled = false;\n      this.input.style.display = \"block\";\n      this.input.focus();\n    }\n  }\n\n  render() {\n    let request = requestAnimationFrame(this.render);\n    \n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.canvas.addEventListener('click', this.input.focus())\n    this.input.addEventListener('keydown', this.handleZombie);\n    this.input.addEventListener('input', this.startTimer);\n\n    let fps = 12;\n    let interval = 1000 / fps;\n    let now = Date.now();\n    let delta = now - this.then;\n\n    setInterval(() => {\n      this.counter += 10\n    }, 5)\n\n    if (this.counter % 10000 === 0) {\n      this.round += .5\n    }\n    \n    if ((this.player.killCount / (this.inputTimer / 60))) {\n      this.player.wpm = (this.player.killCount / (this.inputTimer / 60)).toFixed(2);\n    } else {\n      this.player.wpm = 0;\n    }\n\n    this.spawnZombies();\n    this.player.drawWordList(this.zombies);\n    this.player.drawWPM();\n    this.player.drawKillCount();\n      \n    for (let zomb in this.zombies) {\n      let { x } = this.zombies[zomb];\n      \n      if (this.zombies[zomb].alive) {\n        if (x < this.canvas.width - 200) {\n          this.zombies[zomb].draw()\n          this.zombies[zomb].converge();\n\n          if (delta > interval) {\n            this.then = now - (delta % interval);\n            this.zombies[zomb].animateMovement();\n          }\n\n          this.separateHorde(zomb, this.zombies[zomb]);\n        } else {\n          this.zombies[zomb].drawAttack();\n\n          if (delta > interval) {\n            this.then = now - (delta % interval);\n            this.zombies[zomb].animateAttack();\n            this.player.health -= .3;\n          }\n        }\n      } else {\n        this.zombies[zomb].drawDead();\n        if (delta > interval) {\n          this.then = now - (delta % interval);\n          this.zombies[zomb].animateDead();\n        }\n      }\n    }\n\n    for (let zomb in this.zombies) {\n      if (this.zombies[zomb].alive) {\n        this.zombies[zomb].drawText()\n      }\n    }\n\n    if (this.player.health > 0) {\n      this.player.drawHealth();\n      this.player.draw();\n      if (this.counter - this.attackTimer > 4000) {\n        this.player.attack = false;\n      }\n    } else if (this.player.health <= 0) {\n      this.player.health = 0;\n      this.player.drawHealth();\n      clearInterval(window.intervalId);\n      cancelAnimationFrame(request);\n      this.gameOver();\n    }\n  }\n\n\n  gameOver() {\n    this.canvas.removeEventListener('click', this.input.focus())\n    this.input.removeEventListener('keydown', this.handleZombie);\n    this.input.removeEventListener('input', this.startTimer)\n    this.wordList.innerHTML = \"\";\n    this.input.value = \"\";\n    this.input.disabled = true;\n    this.input.style.display = \"none\";\n    \n    let highScores;\n    firebase.database().ref(\"highScores\").orderByChild('score').limitToLast(5).on(\"value\", function (snapshot) {\n      highScores = Object.values(snapshot.val()).sort((a, b) => b.score - a.score);\n    });\n\n    if (this.player.killCount > highScores[0].score || (highScores.length < 5 && this.player.killCount > 0)) {\n      window.highScoreInterval = setInterval(this.highScoreAnimate, 100);\n    } else {\n      this.scoreInput.removeEventListener('keydown', this.handleHighScore);\n      this.scoreInput.hidden = true;\n      this.scoreInput.disabled = true;\n      this.gameOverScreen.endCounter = 0;\n      this.gameOverScreen.fade = 0;\n      this.canvas.className = \"game-over-screen\";\n      window.overInterval = setInterval(this.gameOverAnimate, 100);\n    }\n  }\n\n  gameOverAnimate() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawMenuBackground();\n    this.gameOverScreen.drawGameOver();\n    \n    this.gameOverScreen.fade += .05;\n    this.gameOverScreen.endCounter += .5;\n    if (this.gameOverScreen.fade >= 1) {\n      this.gameOverScreen.fade = 1;\n    }\n    if (this.gameOverScreen.endCounter >= 10) {\n      this.gameOverScreen.drawGameOverWPM(this.player.wpm);\n    }\n    if (this.gameOverScreen.endCounter >= 12.5) {\n      this.gameOverScreen.drawGameOverKills(this.player.killCount);\n    }\n    if (this.gameOverScreen.endCounter >= 15) {\n      this.gameOverScreen.drawHighScores(this.player.killCount);\n    }\n    if (this.gameOverScreen.endCounter >= 17.5) {\n      this.canvas.addEventListener('click', this.startGame)\n      this.page.addEventListener('keydown', this.startGame)\n      if (this.gameOverScreen.endCounter % 10 >= 5) {\n        this.gameOverScreen.drawRestartClick();\n      }\n    }\n  }\n\n  highScoreAnimate() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.scoreInput.hidden = false;\n    this.scoreInput.disabled = false;\n    this.scoreInput.focus();\n    this.scoreInput.addEventListener('keydown', this.handleHighScore)\n    this.drawMenuBackground();\n    this.gameOverScreen.drawHighScoreInput();\n  }\n\n  handleHighScore(e) {\n    if (e.keyCode === 13) {\n      let highScoreName = this.scoreInput.value;\n\n      firebase.database().ref(\"highScores\").push({ \"name\": highScoreName, \"score\": killCount, 'WPM': wpm })\n      clearInterval(window.highScoreInterval); \n\n      this.scoreInput.removeEventListener('keydown', this.handleHighScore);\n      this.scoreInput.hidden = true;\n      this.scoreInput.disabled = true;\n      this.scoreInput.value = \"\";\n      this.gameOverScreen.endCounter = 0;\n      this.gameOverScreen.fade = 0;\n      this.canvas.className = \"game-over-screen\";\n      window.overInterval = setInterval(this.gameOverAnimate, 100);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/game_over_screen.js":
/*!*********************************!*\
  !*** ./src/game_over_screen.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass GameOverScreen {\n  constructor(page, ctx, canvas, wordList, input, scoreInput) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n\n    this.fade = 0;\n    this.endCounter = 0;\n  }\n\n  drawGameOver() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = `rgba(255, 0, 0, ${this.fade}`;\n      this.ctx.font = 'bold 72px \"Roboto Slab\"';\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(\"Game Over\", (this.canvas.width / 2), 110);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawGameOverWPM(wpm) {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"white\";\n      this.ctx.font = 'bold 20px \"Roboto Slab\"';\n      if (wpm) {\n        this.ctx.fillText(\"WPM: \" + wpm, (this.canvas.width / 2) - 120, 150);\n      } else {\n        this.ctx.fillText(\"WPM: 0\", (this.canvas.width / 2) - 120, 150);\n      }\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawGameOverKills(killCount) {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"white\";\n      this.ctx.font = 'bold 20px \"Roboto Slab\"';\n      this.ctx.fillText(\"Kills: \" + `${killCount}`, (this.canvas.width / 2)+110, 150);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawRestartClick() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"lightgreen\";\n      this.ctx.textAlign = \"center\"; \n      this.ctx.font = 'bold 30px \"Roboto Slab\"';\n      this.ctx.fillText(\"Click or Press Enter to Restart\", (this.canvas.width / 2), 375);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawHighScores(killCount) {\n    let highScores;\n    firebase.database().ref(\"highScores\").orderByChild('score').limitToLast(5).on(\"value\", function (snapshot) {\n      highScores = Object.values(snapshot.val()).sort((a, b) => b.score - a.score);\n    });\n\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"lightgreen\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.font = \"bold 20px 'Roboto Slab'\";\n      this.ctx.fillText(\"Your score was: \" + `${killCount}`, this.canvas.width/2, 180);\n      this.ctx.fillText(\"High Scores: \", this.canvas.width/2, 210);\n\n      let yPos = 240;\n      this.ctx.font = \"bold 16px 'Roboto Slab'\";\n      highScores.forEach(highScore => {\n        this.ctx.textAlign = \"left\";\n        this.ctx.fillText(\"Name: \" + `${highScore.name}`, (this.canvas.width/2) - 180, yPos);\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Kills: \" + `${highScore.score}`, this.canvas.width/2, yPos);\n        this.ctx.textAlign = \"left\";\n        this.ctx.fillText(\"WPM: \" + `${highScore.WPM}`, this.canvas.width/2 + 80, yPos);\n        yPos += 20;\n      })\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawHighScoreInput() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"lightgreen\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.font = 'bold 44px \"Roboto Slab\"';\n      this.ctx.fillText(\"You've reached a high score!\", this.canvas.width/2, 150)\n      this.ctx.font = 'bold 32px \"Roboto Slab\"';\n      this.ctx.fillText(\"Type in your name: \", this.canvas.width/2, 200);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameOverScreen);\n\n//# sourceURL=webpack:///./src/game_over_screen.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _start_screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./start_screen */ \"./src/start_screen.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const page = document.getElementById(\"page\")\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const input = document.getElementById('typing-form');\n  const wordList = document.getElementById('word-list');\n  const scoreInput = document.getElementById('high-score-form');\n\n  let highScores;\n  firebase.database().ref(\"highScores\").orderByChild('score').limitToLast(5).on(\"value\", function (snapshot) {\n    highScores = Object.values(snapshot.val()).sort((a, b) => b.score - a.score);\n  });\n\n  const startScreen = new _start_screen__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx, canvas);\n  const game = new _game__WEBPACK_IMPORTED_MODULE_1__[\"default\"](page, ctx, canvas, wordList, input, scoreInput);\n\n  let titlepos = -60;\n  let startCounter = 0;\n\n  function titleDrop() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    game.drawMenuBackground();\n    titlepos += 5;\n    if (titlepos >= 140) {\n      titlepos = 140;\n      startCounter += .5;\n      if (startCounter % 10 <= 6) {\n        startScreen.drawStartClick();\n      } else {\n        null;\n      }\n      canvas.addEventListener('click', game.startGame)\n      page.addEventListener('keydown', game.startGame)\n    }\n    startScreen.drawTitle(titlepos);\n  }\n\n  if (canvas.className === \"start-screen\") {\n    game.drawMenuBackground();\n\n    input.style.display = \"none\";\n    window.startInterval = setInterval(titleDrop, 70);\n  }\n})\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Player {\n\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.health = 100;\n    this.wpm;\n    this.killCount = 0;\n    this.attack = false;\n\n    this.playerImg = new Image();\n    this.playerImg.src = \"./public/images/player.png\";\n  }\n\n  draw() {\n    if (this.attack) {\n      this.ctx.drawImage(this.playerImg,\n                    225, 239,\n                    72, 81,\n                    canvas.width - 150, canvas.height / 2,\n                    72, 81);\n    } else {\n      this.ctx.drawImage(this.playerImg,\n                    297, 240,\n                    72, 81,\n                    canvas.width - 150, canvas.height / 2,\n                    72, 81);\n    }\n  }\n\n  drawHealthText() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"white\";\n      this.ctx.font = 'bold 18px \"Roboto Slab\"';\n      this.ctx.fillText(\"Health: \", this.canvas.width - 100, 50)\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawHealth() {\n    this.ctx.beginPath();\n      this.drawHealthText();\n      if (this.health > 30) {\n        this.ctx.fillStyle = \"#29ff6a\";\n      } else {\n        this.ctx.fillStyle = \"red\";\n      }\n      this.ctx.font = 'bold 20px \"Roboto Slab\"';\n      this.ctx.fillText(Math.floor(this.health).toString(), this.canvas.width - 50, 50);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawKillCount() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"white\";\n      this.ctx.font = 'bold 18px \"Roboto Slab\"';\n      this.ctx.fillText(\"Kills: \" + this.killCount.toString(), this.canvas.width - 210, 50);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawWordList(zombies) {\n    let list = document.getElementById(\"word-list\");\n    list.innerHTML = \"\";\n\n    Object.values(zombies).forEach(zombie => {\n      if (zombie.x >= 350 && zombie.alive) {\n        if (zombie.word.length > 0 && list.children.length < 10) {\n          list.insertAdjacentHTML(\"beforeend\", `<li>${zombie.word}</li>`);\n        }\n      }\n    })\n  }\n\n  drawWPM() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"white\";\n      this.ctx.font = 'bold 18px \"Roboto Slab\"';\n\n      if (this.wpm) {\n        this.ctx.fillText(\"WPM: \" + this.wpm, 480, 50);\n      } else {\n        this.ctx.fillText(\"WPM: 0\", 480, 50);\n      }\n      \n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n\n//# sourceURL=webpack:///./src/player.js?");

/***/ }),

/***/ "./src/start_screen.js":
/*!*****************************!*\
  !*** ./src/start_screen.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass StartScreen {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.titlePos = -60;\n    this.startCounter = 0;\n  }\n\n  drawTitle(titlePos) {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"rgba(255, 255, 255, 0.95)\";\n      this.ctx.font = 'bold 72px \"Roboto Slab\"';\n      this.ctx.textAlign = \"center\"; \n      this.ctx.fillText(\"Typing Dead\", (canvas.width/2), titlePos);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawStartClick() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"red\";\n      this.ctx.font = 'bold 36px \"Roboto Slab\"';\n      this.ctx.textAlign = \"center\"; \n      this.ctx.fillText(\"Click or Press Enter to Start\", (canvas.width / 2), 300);\n      this.ctx.fill();\n    this.ctx.closePath();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (StartScreen);\n\n//# sourceURL=webpack:///./src/start_screen.js?");

/***/ }),

/***/ "./src/zombie.js":
/*!***********************!*\
  !*** ./src/zombie.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Zombie {\n  constructor(ctx, canvas, word, x, y, alive){\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.word = word;\n    this.x = x;\n    this.y = y;\n    this.dx = 2.5\n    this.dy = 0;\n    this.shift = 0;\n    this.deadShift = 575;\n    this.alive = alive;\n    \n    this.zombieImg = new Image();\n    this.zombieImg.src = \"./public/images/zombie.png\";\n  }\n  \n  draw() {\n    this.ctx.drawImage(this.zombieImg, \n                        this.shift, 88, \n                        50, 90, \n                        this.x, this.y,\n                        50, 90);\n  }\n\n  drawDead() {\n    this.ctx.drawImage(this.zombieImg,\n                        this.deadShift, 270,\n                        50, 90,\n                        this.x, this.y,\n                        50, 90);\n  }\n\n  drawAttack() {\n    this.ctx.drawImage(this.zombieImg,\n                        this.deadShift, 178,\n                        75, 90,\n                        this.x, this.y,\n                        55, 90);\n  }\n\n  drawText() {\n    this.ctx.beginPath();\n      this.ctx.fillStyle = \"#13ffde\";\n      this.ctx.font = 'bold 18px \"Roboto Slab\"';\n      this.ctx.fillText(this.word, this.x + 20, this.y - 7);\n      this.ctx.fill();\n      this.ctx.shadowBlur = 3;\n      this.ctx.font = '19px \"Roboto Slab\"'\n    this.ctx.closePath();\n  }\n\n  converge() {\n    if (this.x > 350) {\n      if (this.y < this.canvas.height / 2) {\n        this.dy = 2;\n      } else if (this.y > this.canvas.height / 2) {\n        this.dy = -2;\n      } else {\n        this.dy = 0;\n      }\n    }\n  }\n\n  animateMovement() {\n    this.x += this.dx;\n    this.y += this.dy;\n    this.shift += 100.75;\n    if (this.shift >= 1155) {\n      this.shift = 0;\n    }\n  }\n\n  animateAttack() {\n    this.deadShift += 97;\n    if (this.deadShift >= 1140) {\n      this.deadShift = 0;\n    }\n  }\n\n  animateDead() {\n    this.deadShift += 97;\n    if (this.deadShift >= 1250) {\n      this.deadShift = 1254;\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Zombie);\n\n//# sourceURL=webpack:///./src/zombie.js?");

/***/ })

/******/ });